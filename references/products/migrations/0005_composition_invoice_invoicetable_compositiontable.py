# Generated by Django 4.0.4 on 2023-01-17 02:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('suppliers', '0001_initial'),
        ('stores', '0001_initial'),
        ('measure', '0001_initial'),
        ('products', '0004_products_article'),
    ]

    operations = [
        migrations.CreateModel(
            name='Composition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdOn', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('createdBy', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='composition_author', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_cmp', to='products.products', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Комплект',
                'verbose_name_plural': 'Комплекты',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DocNum', models.CharField(max_length=16, verbose_name='Номер')),
                ('DocDate', models.DateTimeField(verbose_name='Дата')),
                ('createdOn', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('isActive', models.BooleanField(default=True)),
                ('createdBy', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invoice_author', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='stores.stores', verbose_name='Склад')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='suppliers.supplier', verbose_name='Поставщик')),
            ],
            options={
                'verbose_name': 'Накладная',
                'verbose_name_plural': 'Накладные',
            },
        ),
        migrations.CreateModel(
            name='InvoiceTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(verbose_name='Количество')),
                ('price', models.FloatField(verbose_name='Цена')),
                ('docptr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.invoice', verbose_name='Накладная')),
                ('mt', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='measure.measure', verbose_name='ед. изм.')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.products', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Накладная ТЧ',
                'verbose_name_plural': 'Накладная ТЧ',
            },
        ),
        migrations.CreateModel(
            name='CompositionTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qntty', models.FloatField(verbose_name='Количество')),
                ('docptr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.composition', verbose_name='Комплект')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_cmp_tbl', to='products.products', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Комплект ТЧ',
                'verbose_name_plural': 'Комплекты ТЧ',
            },
        ),
    ]
